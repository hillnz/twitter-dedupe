name: build docker image

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  DOCKER_REPO: jonoh/twitter-dedupe

jobs:
  master:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: test

      - name: Test
        run: |
          docker run --rm --entrypoint bash test -c "pip install pytest && pytest"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Bump version
        id: bump_version
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          pip install poetry
          poetry version patch
          VERSION=$(poetry version -s)
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add pyproject.toml
          git commit -m "Bump version to $VERSION"
          git push
          echo "::set-output name=VERSION::$VERSION"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: "${{ env.DOCKER_REPO }}:${{ steps.bump_version.outputs.VERSION }},${{ env.DOCKER_REPO }}:latest"

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKER_REPO }}
